spring:
  application:
    name: gateway

  cloud:
    gateway:
      routes:
        - id: resource-service
          uri: ${RESOURCE_SERVICE_URL:http://localhost:9090}
          predicates:
            - Path=/api/**
          filters:
            - AddRequestHeader=X-Gateway, SpringCloudGateway
            - name: CircuitBreaker
              args:
                name: resourceServiceCircuitBreaker
                fallbackUri: forward:/fallback/resources

  security:
    oauth2:
      resourceserver: # 리소스서버 설정
        jwt:
          jwk-set-uri: ${KEYCLOAK_URL:http://localhost:8080}/realms/${KEYCLOAK_REALM}/protocol/openid-connect/certs
          issuer-uri: ${KEYCLOAK_URL:http://localhost:8080}/realms/${KEYCLOAK_REALM}

resilience4j:
  circuitbreaker:
    instances:
      resourceServiceCircuitBreaker:
        failureRateThreshold: 50 # 50% 이상의 실패 발생 시 열림
        slowCallRateThreshold: 50 # 느린 응답 비율 50% 초과 시 열림
        slowCallDurationThreshold: 2s # 2초 이상 응답 지연 시 '느린 응답'으로 간주
        waitDurationInOpenState: 10s # 서킷이 열린 후 10초 동안 요청 차단
        permittedNumberOfCallsInHalfOpenState: 3 # 반-열림 상태에서 3개 요청 허용
        slidingWindowSize: 10 # 최근 10개 요청을 기준으로 서킷 브레이커 판단
